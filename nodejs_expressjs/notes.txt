Introduction To Node.js:
  1) Use it to build a server.
  2) Most popular for building servers.
  3) Node comes with it's own properties, different from the browser.
  4) fetch() is now a native feature of Node.

ES2020: globalThis:
  1) globalThis === window.
  2) globalThis works outside of the browser as well.
  3) globalThis exists both outside and within the browser.
  4) we We can now have a unified code base.

ES6 Modules??:
  1) As time will pass, you will encounter less and less use of CommonJS modules and more Node projects using native ES6 modules.
  2) Remember answer is always within the documentation.

ES2022: Top Level Await:
  1) Previously: The use of await depended on async keyword.
  2) Now don't need anymore due to top level await.
  3) There's still a use for the async keyword.
  3) Power of this feature comes in during node modules.
  4) 

ES2022: Await Import:
  1) await helps us await fetch functions.
  2) We can use it on things like import.
  3) Only import stuff when we actually need it.
  4) TOP LEVEL AWAIT means you can use `await` in async functions and the top level bodies of modules...not inside functions

Types of Modules:
  1) 3 kinds of modules.
  2) Modules that you create yourself.
  3) Built in modules, modules come ready preinstalled with node.
  4) fs, http modules.
  5) devDependencies: dependencies only used for development.
  6) nodemon, helps to watch outputs and changes live.

Express Middleware:
  1) req: request, res: response
  2) app.use((req, res, next) => {})
    - The application will hang within the function until next() is included in the last line.

Postman:
  1) form-data and x-www-form-urlencoded is html form tag.
  2) Need to use a middleware as well.
  3) PUT is used for updating.
  4) Great way to test out the server before connecting to front end.

RESTful APIs:
  1) Defines a set of functions which developers can perform, request, receive responses via HTTP protocol.
  2) GET, PUT, POST, DELETE
  3) An approach to communications.
  4) HTTP request is the verb, and whatever comes after the / is the noun.
  5) REST APIs are stateless.
  6) You can have as many as you want.
  7) Some of the most used properties.
    - req.query
      - Query string
    - req.body
    - req.header
    - req.params
  8) Serve static assets.

Node File System Module:
  1) fs stands for file system.
  2) Encoding utf-8.
    - A way for us to have characters and abc's.
  3) fs.readFile is asynchronous, has a callback function.
  4) fs.readFileSync is synchronous.

Exercise: Santa's Node Helper:
  1) console.time('abc'), starts the timer.
  2) console.timeEnd('abc'), ends the timer.

  